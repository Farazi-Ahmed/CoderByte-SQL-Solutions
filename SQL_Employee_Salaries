/*********************************************************************************************
 *                            CODERBYTE SQL EMPLOYEE SALARIES CHALLENGE                      *
 *                                                                                           *
 * Your table: maintable_M3LJZ                                                               *
 * MySQL version: 5.5.56-log                                                                 *
 *                                                                                           *
 *        +-------+---------------+------------+------------------+---------------+          *
 *        | ID    | Name          | DivisionID |    ManagerID     | Salary        |          *
 *        +-------+---------------+------------+------------------+---------------+          *
 *        | 356	  | Daniel Smith  | 100	       |    133	          | 40000 	  |              *
 *        | 122	  | Arnold Sully  | 101	       |    null    	    | 60000 	  |              *
 *        | 467	  | Lisa Roberts  | 100        |    null	        | 80000	    |              *
 *        | 112	  | Mary Dial     | 105	       |    467   	      | 65000	    |              *
 *        | 775	  | Dennis Front  | 103	       |    null  	      | 90000 	  |              *
 *        | 111	  | Larry Weis    | 104	       |    35534 	      | 75000 	  |              *
 *        | 222	  | Mark Red      | 102	       |    133	          | 86000 	  |              *
 *        | 577	  | Robert Night  | 105        |    12353	        | 76000 	  |              *
 *        | 133	  | Susan Wall    | 105        |    577	          | 110000	  |              *
 *        +-------+---------------+------------+------------------+---------------+          *
 *                                                                                           *
 * Problem Statement                                                                         *
 * In this MySQL challenge, your query should return the information for the employee with   *
 * the third highest salary. Write a query that will find this employee and return that row, *
 * but then replace the DivisionID column with the corresponding DivisionName from the table *
 * cb_companydivisions. You should also replace the ManagerID column with the ManagerName if *
 * the ID exists in the table and is not NULL.                                               *
 *                                                                                           *
 * Your output should look like the following table.                                         *
 *                                                                                           *
 *       +-------+---------------+--------------+--------------------+---------------+       *
 *       | ID    | Name          | DivisionName |    ManagerName     | Salary        |       *
 *       +-------+---------------+--------------+--------------------+---------------+       *
 *       | 222	 | Mark Red      | Sales	|    Susan Wall	           | 86000 	       |       *
 *       +-------+---------------+--------------+--------------------+---------------+       *
 *                                                                                           *
 ********************************************************************************************/
 
-----------------Solutions--------------------------

/* write your SQL query below */

SELECT s.ID, s.Name, d.DivisionName as DivisionName, m.Name as ManagerName, s.Salary
FROM
	maintable_M3LJZ s
	
INNER JOIN 
	cb_companydivisions d
ON 
	s.DivisionID = d.ID

INNER JOIN 
	(SELECT s.ID, s.Name
		FROM maintable_M3LJZ s) as m
ON
	m.ID = s.ManagerID
		
WHERE 
	s.Salary = 
		(SELECT MIN(s.Salary) 
		FROM
			(SELECT * 
				FROM maintable_M3LJZ s
				Order By s.Salary DESC
				LIMIT 3
			)
		) 